from django.db import models
from django.utils import timezone


class AnalyticsReport(models.Model):
    """
    Analytics report model for storing generated reports.
    """
    REPORT_TYPES = [
        ('employee_summary', 'Employee Summary'),
        ('department_analysis', 'Department Analysis'),
        ('attendance_report', 'Attendance Report'),
        ('performance_report', 'Performance Report'),
        ('custom', 'Custom Report'),
    ]

    title = models.CharField(max_length=200, verbose_name="Report Title")
    report_type = models.CharField(max_length=50, choices=REPORT_TYPES, verbose_name="Report Type")
    description = models.TextField(blank=True, null=True, verbose_name="Description")
    parameters = models.JSONField(default=dict, verbose_name="Report Parameters")
    generated_at = models.DateTimeField(default=timezone.now, verbose_name="Generated At")
    generated_by = models.ForeignKey('auth.User', on_delete=models.SET_NULL, null=True, related_name="generated_reports", verbose_name="Generated By")
    is_active = models.BooleanField(default=True, verbose_name="Active")

    def __str__(self):
        return f"{self.title} ({self.report_type})"

    class Meta:
        verbose_name = "Analytics Report"
        verbose_name_plural = "Analytics Reports"
        ordering = ('-generated_at',)


class DashboardWidget(models.Model):
    """
    Dashboard widget model for customizable dashboard components.
    """
    WIDGET_TYPES = [
        ('chart', 'Chart'),
        ('metric', 'Metric'),
        ('table', 'Table'),
        ('text', 'Text'),
    ]

    title = models.CharField(max_length=100, verbose_name="Widget Title")
    widget_type = models.CharField(max_length=20, choices=WIDGET_TYPES, verbose_name="Widget Type")
    position = models.IntegerField(default=0, verbose_name="Position")
    size = models.CharField(max_length=20, default='medium', verbose_name="Size")
    config = models.JSONField(default=dict, verbose_name="Widget Configuration")
    is_visible = models.BooleanField(default=True, verbose_name="Visible")
    created_at = models.DateTimeField(auto_now_add=True, verbose_name="Created At")
    updated_at = models.DateTimeField(auto_now=True, verbose_name="Updated At")

    def __str__(self):
        return self.title

    class Meta:
        verbose_name = "Dashboard Widget"
        verbose_name_plural = "Dashboard Widgets"
        ordering = ('position',)
